#!/bin/bash

source /usr/lib/ayer/functions.sh

load_config

PROG=$(basename "$0")

TEMP=`getopt -n $PROG  -o c: -l commit: -- "$@"` || exit 1
eval set -- "$TEMP"

while [ "$#" -gt 0 ]; do
    case "$1" in
        -c|--commit)
            build_commit=$2
            shift
            ;;
    esac
    shift
done
[ -n "$build_commit" ] || die "build commit is unknown"


#########
# FIXME: this code is too long...
commit_info_file=$(mktemp /tmp/ayer.build.XXXXXX)
gerrit_command query "project:release commit:$build_commit" --current-patch-set > $commit_info_file
while read key value; do
    case "$key" in
        branch:)
            build_branch=$value
            ;;
        ref:)
            release_refspec=$value
    esac
done < "$commit_info_file"
rm "$commit_info_file"
[ -n "$build_branch" ] || die "build branch is unknown"
#########

git_dir="$BASE_WORKDIR/git"

target_path="$build_branch/$build_os"
base_target_dir="$YUM_REPO_DIR/$target_path"
main_repo_dir="$base_target_dir/main"

[ -d "$main_repo_dir" ] || die "looks like there is no trunk: $main_repo_dir directory is missing"

target_path="$build_branch"
previous_ref="$build_branch"

ayer-build-function "$build_commit" "$previous_ref" "$target_path" "$build_branch"


cd "$git_repos_dir"

echo "$release_refspec release" >> "$git_list"

while read treeish repo_name; do
    repo_name="${repo_name%.git}"
    cd "$git_repos_dir/${repo_name}.git"
    git fetch origin "$build_branch:refs/remotes/origin/$build_branch" "$treeish:refs/remotes/origin/$treeish"
    difference=$(git rev-list origin/$build_branch..origin/$treeish)
    if [ -n "$difference" ]; then
        ssh -p "$GERRIT_PORT" "$GERRIT_SSH" gerrit review --project "$repo_name" --message "'Accepted to trunk'" --submit $difference &>/dev/null
        git fetch origin "$build_branch:refs/remotes/origin/$build_branch"
        difference=$(git cherry -v origin/$build_branch origin/$treeish)
        if [ -n "$difference" ]; then
            die "not all commits can be accepted to $repo_name:
$difference"
        fi
    fi
done < "$git_list"

ready_rpm_dir="$build_dir/RPMS/"
target_yum_repo_dir="$base_target_dir/main"
mkdir -p "$target_yum_repo_dir"
mv "$ready_rpm_dir/"*.rpm "$target_yum_repo_dir"
ayer-clean-repo "$target_yum_repo_dir"
createrepo "$target_yum_repo_dir"
rm -rf "$build_dir"
